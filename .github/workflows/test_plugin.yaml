name: Test plugin

on:
  push:
    paths:
    - "processing_pcraster/**"
    - ".github/workflows/test_plugin.yaml"
  pull_request:
    types: [opened, synchronize, edited]

env:
  # plugin name/directory where the code for the plugin is stored
  PLUGIN_NAME: processing_pcraster
  # python notation to test running inside plugin
  TESTS_RUN_FUNCTION: processing_pcraster.test_suite.test_package
  # Docker settings
  DOCKER_IMAGE: qgis/qgis


jobs:

  Test-plugin-Processing-PCRaster:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker pull and create qgis-testing-environment
        run: |
          docker pull continuumio/miniconda3
          docker run -i -d --name qgis-testing-environment -v "$GITHUB_WORKSPACE":/tests_directory -e DISPLAY=:99 continuumio/miniconda3
          docker exec qgis-testing-environment /bin/bash -c "conda install -c conda-forge pcraster qgis nose"
          docker exec qgis-testing-environment /bin/bash -c "apt-get update && apt-get install -y libgl1-mesa-glx xvfb"
          docker exec qgis-testing-environment /bin/bash -c "ln -s /opt/conda/bin/lrelease /opt/conda/bin/lrelease-qt5"

      - name: Docker run plugin tests
        run: |
          docker exec qgis-testing-environment /bin/bash -l -c "cd tests_directory && xvfb-run nosetests -v"

  Check-code-quality:
    runs-on: ubuntu-latest
    steps:

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install packages
        run: |
          pip install -r REQUIREMENTS_TESTING.txt
          pip install pylint pycodestyle

      - name: Pylint
        run: make pylint

      - name: Pycodestyle
        run: make pycodestyle
